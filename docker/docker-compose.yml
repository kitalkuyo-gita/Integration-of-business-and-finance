version: '3.8'

services:
  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: iobaf-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root123
      MYSQL_DATABASE: iobaf
      MYSQL_USER: iobaf
      MYSQL_PASSWORD: iobaf123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init.sql:/docker-entrypoint-initdb.d/init.sql
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - iobaf-network

  # Redis缓存
  redis:
    image: redis:7.0-alpine
    container_name: iobaf-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - iobaf-network

  # RabbitMQ消息队列
  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: iobaf-rabbitmq
    restart: always
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin123
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - iobaf-network

  # 后端服务
  backend:
    build: 
      context: ../backend
      dockerfile: Dockerfile
    container_name: iobaf-backend
    restart: always
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: prod
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/iobaf?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
      SPRING_REDIS_HOST: redis
      SPRING_RABBITMQ_HOST: rabbitmq
    depends_on:
      - mysql
      - redis
      - rabbitmq
    networks:
      - iobaf-network

  # 前端服务
  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
    container_name: iobaf-frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    networks:
      - iobaf-network

  # Nginx网关
  nginx:
    image: nginx:1.24-alpine
    container_name: iobaf-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - iobaf-network

volumes:
  mysql_data:
  redis_data:
  rabbitmq_data:

networks:
  iobaf-network:
    driver: bridge 